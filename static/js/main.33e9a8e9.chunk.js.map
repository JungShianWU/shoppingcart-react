{"version":3,"sources":["components/ContainerBar.js","components/List.js","components/App.js","index.js"],"names":["ContainerBar","react_default","a","createElement","Jumbotron","className","color","React","Component","List","state","magic","productDB","modal","cart","toggle","_this","setState","renderList","map","product","Col","sm","md","Card","CardImg","width","src","img","alt","CardBlock","CardTitle","title","CardSubtitle","discount","Badge","price","CardText","desc","Button","onClick","addToCart","deleteCartItem","index","splice","renderModals","totalPrice","reduce","acc","item","Modal","isOpen","ModalHeader","ModalBody","Table","scope","Alert","ModalFooter","disabled","length","checkout","renderCart","style","push","alert","concat","Container","this","Row","App","components_ContainerBar","components_List","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.33e9a8e9.chunk.js","sourcesContent":["import React from 'react';\nimport { Jumbotron } from 'reactstrap';\n\n\n\n\nclass ContainerBar extends React.Component {\n    render() {\n        return (<div>\n            <Jumbotron>\n                <h1 className=\"display-3\">技能商店</h1>\n                <p className=\"lead\">\n                    有了我們，你只需要點選購買就能馬上提升技能了！\n         </p>\n                <p className=\"lead\">\n                    <p color=\"primary\">心動不如馬上行動!!</p>\n                </p>\n            </Jumbotron>\n        </div>\n        )\n    };\n};\n\n\nexport default ContainerBar;\n","import React from 'react';\nimport { Container, Button, Row, Col, Card, CardImg, CardBlock, CardTitle, CardSubtitle, CardText, Badge, Modal, ModalHeader, ModalBody, ModalFooter, Table, Alert } from 'reactstrap';\nimport productDB from './productDB.json';\n\n\n\n\n\n\nclass List extends React.Component {\n    state = {\n        magic: productDB,\n        modal: false,\n        cart: []\n    };\n    toggle = () => this.setState({ modal: !this.state.modal })\n\n    renderList = () => {\n        return (\n            this.state.magic.map(product =>\n                (\n                    <Col sm={6} md={4} className=\"mb-3\">\n                        <Card>\n                            <CardImg width=\"100%\" src={product.img} alt=\"Card image cap\" />\n                            <CardBlock>\n                                <CardTitle>{product.title}</CardTitle>\n                                <CardSubtitle>\n                                    <h4>\n                                        {\n                                            product.discount\n                                                ? <Badge color=\"danger\">特價：{product.price}</Badge>\n                                                : <Badge color=\"success\">售價：{product.price}</Badge>\n                                        }\n\n                                    </h4>\n                                </CardSubtitle>\n                                <CardText>{product.desc}</CardText>\n                                <Button\n                                    color=\"secondary\"\n                                    onClick={() => { this.addToCart(product) }}\n                                // disabled={this.state.cart.find(item => item.id === product.id)}\n                                >加到購物車</Button>\n                            </CardBlock>\n                        </Card>\n                    </Col >\n\n                )\n            )\n        )\n    };\n\n    deleteCartItem = (index) => {\n        const cart = this.state.cart;\n        cart.splice(index, 1);\n        this.setState({\n            cart\n        });\n    }\n\n\n\n    renderModals = () => {\n        const totalPrice = this.state.cart.reduce((acc, item) => (acc += item.price), 0);\n        return (\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader toggle={this.toggle}>購物車</ModalHeader>\n                <ModalBody>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>品項</th>\n                                <th>價格</th>\n                                <th>刪除</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.cart.map((item, index) => (\n                                <tr>\n                                    <th scope=\"row\">{index + 1}</th>\n                                    <td>{item.title}</td>\n                                    <td>{item.price}</td>\n                                    <td><Button color=\"danger\" onClick={() => this.deleteCartItem(index)}>X</Button></td>\n                                </tr>\n\n                            ))}\n\n\n\n                        </tbody>\n\n                    </Table>\n                    <Alert color=\"success\" className=\"text-right\">\n                        總價：\n   {totalPrice}\n                        元\n</Alert>\n                </ModalBody>\n                <ModalFooter>\n                    <Button disabled={this.state.cart.length === 0} color=\"primary\" onClick={() => this.checkout(totalPrice)}>結帳</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggle}>取消</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n\n    renderCart = () => {\n\n        if (!this.state.cart.length) {\n            return (\n                <h2 style={{ \"color\": \"red\" }} className=\"col-12\" > 快點看看我們有什麼！</h2 >)\n        } else { return (<Button onClick={this.toggle} color=\"primary\" className=\"col-12\" >購物車裡面已經有 {this.state.cart.length} 樣東西！！</Button>) }\n    }\n\n\n\n    addToCart = (product) => {\n        const cart = this.state.cart;\n        cart.push(product);\n\n        this.setState({\n            cart\n        });\n    }\n\n    checkout = (totalPrice) => {\n        alert(`已從您的信用卡中扣除${totalPrice}元！`);\n        this.toggle()\n        this.setState({ cart: [] })\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    {this.renderCart()}\n                </Container>\n\n\n                <Row>\n                    {this.renderList()}\n                </Row>\n                {this.renderModals()}\n\n            </div>\n\n        )\n\n    };\n};\n\n\nexport default List;\n","import React from 'react';\nimport { Container } from 'reactstrap';\nimport ContainerBar from './ContainerBar';\nimport List from './List';\n\nconst App = () => {\n    return (\n        <div>\n            <Container>\n                <ContainerBar />\n                <List />\n            </Container>\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}